//
//  GBufferPass.cpp
//  PBRLib
//
//  Created by Асиф Мамедов on 20/06/2020.
//  Copyright © 2020 Асиф Мамедов. All rights reserved.
//

#include "GBufferPass.hpp"

#include "../../VulkanWrapper/Device.hpp"

#include "../../VulkanWrapper/ShaderModule.hpp"

#include "../../VulkanWrapper/DescriptorSet.hpp"
#include "../../VulkanWrapper/GraphicsPipeline.hpp"
#include "../../VulkanWrapper/RenderPass.hpp"

#include "../../Geometry/Mesh.hpp"

#include "../../VulkanWrapper/CommandBuffer.hpp"

#include "../../VulkanWrapper/Sampler.hpp"
#include "../../Material/Material.hpp"

namespace pbrlib
{
    static const uint8_t gbuffer_vert_spirv[] =
    {   
        0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x08, 0x00, 0x58, 0x00, 0x00, 0x00,  // ..#.........X...
        0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00,  // ................
        0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30,  // ....GLSL.std.450
        0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ................
        0x0f, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e,  // ............main
        0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,  // ............*...
        0x31, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00,  // 1...:...M...T...
        0x56, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00, 0x00, 0xc2, 0x01, 0x00, 0x00,  // V...............
        0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00,  // ........main....
        0x05, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x50, 0x65, 0x72, 0x56, 0x65,  // ........gl_PerVe
        0x72, 0x74, 0x65, 0x78, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00,  // rtex............
        0x00, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00,  // ....gl_Position.
        0x06, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x50,  // ............gl_P
        0x6f, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x07, 0x00,  // ointSize........
        0x0b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x43, 0x6c, 0x69, 0x70, 0x44,  // ........gl_ClipD
        0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x00, 0x06, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00,  // istance.........
        0x03, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x43, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61,  // ....gl_CullDista
        0x6e, 0x63, 0x65, 0x00, 0x05, 0x00, 0x03, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // nce.............
        0x05, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x63,  // ........u_matric
        0x65, 0x73, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // es..............
        0x4d, 0x56, 0x50, 0x00, 0x06, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // MVP.............
        0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x00, 0x00, 0x00, 0x00,  // model_matrix....
        0x05, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x63, 0x65, 0x73,  // ........matrices
        0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x56, 0x65, 0x72, 0x74,  // ............Vert
        0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00,  // Position........
        0x25, 0x00, 0x00, 0x00, 0x6e, 0x6f, 0x72, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00,  // %...norm........
        0x2a, 0x00, 0x00, 0x00, 0x56, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, 0x00,  // *...VertNormal..
        0x05, 0x00, 0x04, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x74, 0x61, 0x6e, 0x67, 0x00, 0x00, 0x00, 0x00,  // ........tang....
        0x05, 0x00, 0x05, 0x00, 0x31, 0x00, 0x00, 0x00, 0x56, 0x65, 0x72, 0x74, 0x54, 0x61, 0x6e, 0x67,  // ....1...VertTang
        0x65, 0x6e, 0x74, 0x00, 0x05, 0x00, 0x04, 0x00, 0x35, 0x00, 0x00, 0x00, 0x62, 0x69, 0x6e, 0x6f,  // ent.....5...bino
        0x72, 0x6d, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x46, 0x54, 0x42, 0x4e,  // rm......:...FTBN
        0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x46, 0x50, 0x6f, 0x73,  // ........M...FPos
        0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x54, 0x00, 0x00, 0x00,  // ition.......T...
        0x46, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x00, 0x00, 0x00,  // FTextureCoord...
        0x05, 0x00, 0x04, 0x00, 0x56, 0x00, 0x00, 0x00, 0x56, 0x65, 0x72, 0x74, 0x55, 0x56, 0x00, 0x00,  // ....V...VertUV..
        0x48, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,  // H...............
        0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ....H...........
        0x0b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00,  // ........H.......
        0x02, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,  // ............H...
        0x0b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,  // ................
        0x47, 0x00, 0x03, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00,  // G...........H...
        0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,  // ............H...
        0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........#.......
        0x48, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,  // H...............
        0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x13, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ....H...........
        0x05, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ....H...........
        0x23, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00,  // #...@...H.......
        0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00,  // ............G...
        0x13, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00,  // ........G.......
        0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00,  // ".......G.......
        0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x1a, 0x00, 0x00, 0x00,  // !.......G.......
        0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00,  // ........G...*...
        0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x31, 0x00, 0x00, 0x00,  // ........G...1...
        0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x3a, 0x00, 0x00, 0x00,  // ........G...:...
        0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4d, 0x00, 0x00, 0x00,  // ........G...M...
        0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x54, 0x00, 0x00, 0x00,  // ........G...T...
        0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x56, 0x00, 0x00, 0x00,  // ........G...V...
        0x1e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00,  // ................
        0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00,  // !...............
        0x06, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00,  // .... ...........
        0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00,  // ................
        0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00,  //  .......+.......
        0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x0a, 0x00, 0x00, 0x00,  // ................
        0x06, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00,  // ................
        0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,  // ................
        0x20, 0x00, 0x04, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,  //  ...............
        0x3b, 0x00, 0x04, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ;...............
        0x15, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ........ .......
        0x2b, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // +...............
        0x18, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,  // ................
        0x17, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ................
        0x18, 0x00, 0x04, 0x00, 0x12, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ................
        0x1e, 0x00, 0x04, 0x00, 0x13, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00,  // ................
        0x20, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,  //  ...............
        0x3b, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,  // ;...............
        0x20, 0x00, 0x04, 0x00, 0x16, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,  //  ...............
        0x20, 0x00, 0x04, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,  //  ...............
        0x3b, 0x00, 0x04, 0x00, 0x19, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ;...............
        0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f,  // +..............?
        0x20, 0x00, 0x04, 0x00, 0x22, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,  //  ..."...........
        0x20, 0x00, 0x04, 0x00, 0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,  //  ...$...........
        0x2b, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // +.......&.......
        0x20, 0x00, 0x04, 0x00, 0x27, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00,  //  ...'...........
        0x3b, 0x00, 0x04, 0x00, 0x19, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ;.......*.......
        0x3b, 0x00, 0x04, 0x00, 0x19, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ;.......1.......
        0x20, 0x00, 0x04, 0x00, 0x39, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00,  //  ...9...........
        0x3b, 0x00, 0x04, 0x00, 0x39, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ;...9...:.......
        0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // +.......>.......
        0x20, 0x00, 0x04, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,  //  ...L...........
        0x3b, 0x00, 0x04, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ;...L...M.......
        0x17, 0x00, 0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,  // ....R...........
        0x20, 0x00, 0x04, 0x00, 0x53, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00,  //  ...S.......R...
        0x3b, 0x00, 0x04, 0x00, 0x53, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ;...S...T.......
        0x20, 0x00, 0x04, 0x00, 0x55, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00,  //  ...U.......R...
        0x3b, 0x00, 0x04, 0x00, 0x55, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ;...U...V.......
        0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // 6...............
        0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,  // ............;...
        0x24, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,  // $...%.......;...
        0x24, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,  // $...........;...
        0x24, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,  // $...5.......A...
        0x16, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,  // ................
        0x3d, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00,  // =...............
        0x3d, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00,  // =...............
        0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00,  // Q...............
        0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,  // ....Q...........
        0x1b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00,  // ........Q.......
        0x1f, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00,  // ............P...
        0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,  // .... ...........
        0x1f, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x91, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00,  // ................
        0x21, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,  // !....... ...A...
        0x22, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,  // "...#...........
        0x3e, 0x00, 0x03, 0x00, 0x23, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,  // >...#...!...A...
        0x27, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00,  // '...(.......&...
        0x3d, 0x00, 0x04, 0x00, 0x12, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,  // =.......)...(...
        0x3d, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,  // =.......+...*...
        0x91, 0x00, 0x05, 0x00, 0x11, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00,  // ........,...)...
        0x2b, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x11, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00,  // +...........-...
        0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00,  // ....E...,...>...
        0x25, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x27, 0x00, 0x00, 0x00,  // %...-...A...'...
        0x2f, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,  // /.......&...=...
        0x12, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,  // ....0.../...=...
        0x11, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x91, 0x00, 0x05, 0x00,  // ....2...1.......
        0x11, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00,  // ....3...0...2...
        0x0c, 0x00, 0x06, 0x00, 0x11, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ........4.......
        0x45, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x2e, 0x00, 0x00, 0x00,  // E...3...>.......
        0x34, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00,  // 4...=.......6...
        0x25, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00,  // %...=.......7...
        0x2e, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x11, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00,  // ............8...
        0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00,  // ....D...6...7...
        0x3e, 0x00, 0x03, 0x00, 0x35, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,  // >...5...8...=...
        0x11, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,  // ....;.......=...
        0x11, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,  // ....<...5...=...
        0x11, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,  // ....=...%...Q...
        0x06, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ....?...;.......
        0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00,  // Q.......@...;...
        0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,  // ....Q.......A...
        0x3b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00,  // ;.......Q.......
        0x42, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,  // B...<.......Q...
        0x06, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ....C...<.......
        0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,  // Q.......D...<...
        0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00,  // ....Q.......E...
        0x3d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00,  // =.......Q.......
        0x46, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,  // F...=.......Q...
        0x06, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,  // ....G...=.......
        0x50, 0x00, 0x06, 0x00, 0x11, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00,  // P.......H...?...
        0x40, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x11, 0x00, 0x00, 0x00,  // @...A...P.......
        0x49, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,  // I...B...C...D...
        0x50, 0x00, 0x06, 0x00, 0x11, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00,  // P.......J...E...
        0x46, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x12, 0x00, 0x00, 0x00,  // F...G...P.......
        0x4b, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00,  // K...H...I...J...
        0x3e, 0x00, 0x03, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,  // >...:...K...A...
        0x27, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00,  // '...N.......&...
        0x3d, 0x00, 0x04, 0x00, 0x12, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00,  // =.......O...N...
        0x3d, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00,  // =.......P.......
        0x91, 0x00, 0x05, 0x00, 0x11, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00,  // ........Q...O...
        0x50, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00,  // P...>...M...Q...
        0x3d, 0x00, 0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00,  // =...R...W...V...
        0x3e, 0x00, 0x03, 0x00, 0x54, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00,  // >...T...W.......
        0x38, 0x00, 0x01, 0x00 // 8...
    };

    static const uint8_t gbuffer_frag_spirv[] =
    {
        0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x08, 0x00, 0x4a, 0x00, 0x00, 0x00,  // ..#.........J...
        0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00,  // ................
        0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30,  // ....GLSL.std.450
        0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ................
        0x0f, 0x00, 0x0b, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e,  // ............main
        0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00,  // ............!...
        0x23, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00,  // #...0...;.......
        0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00, 0x00,  // ................
        0xc2, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e,  // ............main
        0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00, 0x6e, 0x6f, 0x72, 0x6d,  // ............norm
        0x61, 0x6c, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x46, 0x54, 0x42, 0x4e,  // al..........FTBN
        0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x11, 0x00, 0x00, 0x00, 0x4e, 0x6f, 0x72, 0x6d,  // ............Norm
        0x61, 0x6c, 0x4d, 0x61, 0x70, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00,  // alMap...........
        0x46, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x00, 0x00, 0x00,  // FTextureCoord...
        0x05, 0x00, 0x08, 0x00, 0x21, 0x00, 0x00, 0x00, 0x52, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,  // ....!...RPositio
        0x6e, 0x41, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x63, 0x00, 0x00, 0x00, 0x00,  // nAndMetallic....
        0x05, 0x00, 0x05, 0x00, 0x23, 0x00, 0x00, 0x00, 0x46, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,  // ....#...FPositio
        0x6e, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x25, 0x00, 0x00, 0x00, 0x4d, 0x65, 0x74, 0x61,  // n.......%...Meta
        0x6c, 0x6c, 0x69, 0x63, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x30, 0x00, 0x00, 0x00,  // llic........0...
        0x52, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x41, 0x6e, 0x64, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e,  // RNormalAndRoughn
        0x65, 0x73, 0x73, 0x00, 0x05, 0x00, 0x05, 0x00, 0x32, 0x00, 0x00, 0x00, 0x52, 0x6f, 0x75, 0x67,  // ess.....2...Roug
        0x68, 0x6e, 0x65, 0x73, 0x73, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x3b, 0x00, 0x00, 0x00,  // hness.......;...
        0x52, 0x41, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x41, 0x6e, 0x64, 0x42, 0x61, 0x6b, 0x65, 0x64, 0x41,  // RAlbedoAndBakedA
        0x4f, 0x00, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x41, 0x6c, 0x62, 0x65,  // O.......<...Albe
        0x64, 0x6f, 0x00, 0x00, 0x05, 0x00, 0x03, 0x00, 0x41, 0x00, 0x00, 0x00, 0x41, 0x4f, 0x00, 0x00,  // do......A...AO..
        0x47, 0x00, 0x04, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,  // G...............
        0x47, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // G.......".......
        0x47, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,  // G.......!.......
        0x47, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // G...............
        0x47, 0x00, 0x04, 0x00, 0x21, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // G...!...........
        0x47, 0x00, 0x04, 0x00, 0x23, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // G...#...........
        0x47, 0x00, 0x04, 0x00, 0x25, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // G...%...".......
        0x47, 0x00, 0x04, 0x00, 0x25, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // G...%...!.......
        0x47, 0x00, 0x04, 0x00, 0x30, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // G...0...........
        0x47, 0x00, 0x04, 0x00, 0x32, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // G...2...".......
        0x47, 0x00, 0x04, 0x00, 0x32, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,  // G...2...!.......
        0x47, 0x00, 0x04, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,  // G...;...........
        0x47, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // G...<...".......
        0x47, 0x00, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // G...<...!.......
        0x47, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // G...A...".......
        0x47, 0x00, 0x04, 0x00, 0x41, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,  // G...A...!.......
        0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00,  // ........!.......
        0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,  // ............ ...
        0x17, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ................
        0x20, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,  //  ...............
        0x18, 0x00, 0x04, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ................
        0x20, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,  //  ...............
        0x3b, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ;...............
        0x19, 0x00, 0x09, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ................
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ................
        0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00,  // ................
        0x20, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,  //  ...............
        0x3b, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ;...............
        0x17, 0x00, 0x04, 0x00, 0x13, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,  // ................
        0x20, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,  //  ...............
        0x3b, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ;...............
        0x17, 0x00, 0x04, 0x00, 0x17, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,  // ................
        0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,  // +..............@
        0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f,  // +..............?
        0x20, 0x00, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00,  //  ... ...........
        0x3b, 0x00, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ;... ...!.......
        0x20, 0x00, 0x04, 0x00, 0x22, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,  //  ..."...........
        0x3b, 0x00, 0x04, 0x00, 0x22, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ;..."...#.......
        0x3b, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ;.......%.......
        0x15, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ....)... .......
        0x2b, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // +...)...*.......
        0x3b, 0x00, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ;... ...0.......
        0x3b, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ;.......2.......
        0x3b, 0x00, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ;... ...;.......
        0x3b, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ;.......<.......
        0x3b, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ;.......A.......
        0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // 6...............
        0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,  // ............;...
        0x08, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,  // ............=...
        0x0a, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,  // ............=...
        0x0f, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,  // ............=...
        0x13, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00,  // ............W...
        0x17, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00,  // ................
        0x4f, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,  // O...............
        0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,  // ................
        0x8e, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00,  // ................
        0x1a, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,  // ....P...........
        0x1c, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00,  // ................
        0x07, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,  // ................
        0x91, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,  // ................
        0x1e, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,  // ....>...........
        0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,  // =.......$...#...
        0x3d, 0x00, 0x04, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00,  // =.......&...%...
        0x3d, 0x00, 0x04, 0x00, 0x13, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00,  // =.......'.......
        0x57, 0x00, 0x05, 0x00, 0x17, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00,  // W.......(...&...
        0x27, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00,  // '...Q.......+...
        0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00,  // (.......Q.......
        0x2c, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,  // ,...$.......Q...
        0x06, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ....-...$.......
        0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,  // Q...........$...
        0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x17, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00,  // ....P......./...
        0x2c, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00,  // ,...-.......+...
        0x3e, 0x00, 0x03, 0x00, 0x21, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,  // >...!.../...=...
        0x07, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,  // ....1.......=...
        0x0f, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,  // ....3...2...=...
        0x13, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00,  // ....4.......W...
        0x17, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,  // ....5...3...4...
        0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00,  // Q.......6...5...
        0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00,  // ....Q.......7...
        0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00,  // 1.......Q.......
        0x38, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,  // 8...1.......Q...
        0x06, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,  // ....9...1.......
        0x50, 0x00, 0x07, 0x00, 0x17, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00,  // P.......:...7...
        0x38, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00,  // 8...9...6...>...
        0x30, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0f, 0x00, 0x00, 0x00,  // 0...:...=.......
        0x3d, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x13, 0x00, 0x00, 0x00,  // =...<...=.......
        0x3e, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x17, 0x00, 0x00, 0x00,  // >.......W.......
        0x3f, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00,  // ?...=...>...O...
        0x07, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00,  // ....@...?...?...
        0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,  // ............=...
        0x0f, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,  // ....B...A...=...
        0x13, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00,  // ....C.......W...
        0x17, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00,  // ....D...B...C...
        0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,  // Q.......E...D...
        0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00,  // ....Q.......F...
        0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00,  // @.......Q.......
        0x47, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,  // G...@.......Q...
        0x06, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,  // ....H...@.......
        0x50, 0x00, 0x07, 0x00, 0x17, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00,  // P.......I...F...
        0x47, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00,  // G...H...E...>...
        0x3b, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00 // ;...I.......8...
    };

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @struct UniformBufferMatrices.
     * @brief Структура, описывающая uniform-буфер с необходимыми матрицами для прохода g-буфера.
    */
    struct UniformBufferMatrices
    {
        Matrix4x4<float> MVP;
        Matrix4x4<float> model_matrix;
    };

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    GBufferPass::GBufferPass(
        const PtrDevice&            ptr_device, 
        const PtrDescriptorPool&    ptr_descriptor_pool,  
        const PtrRenderPass&        ptr_render_pass,
        uint32_t                    subpass_index,
        uint32_t                    window_width,
        uint32_t                    window_height,
        uint32_t                    gpu_memory_index,
        uint32_t                    gpu_queue_family_index
    )
    {
        ShaderModule::Builder build_vert_shader;
        ShaderModule::Builder build_frag_shader;

        Sampler::Builder build_sampler;

        GraphicsPipeline::Builder   build_graphics_pipline  (1, 4, 1, 1, 3);

        Buffer::Builder<Matrix4x4<float>> build_uniform_matrices_data_buffer;
        
        DescriptorSetLayoutBindings descripotr_set_layout_bindings (ptr_device, 0);

        descripotr_set_layout_bindings.addBinding(0, VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER, VK_SHADER_STAGE_VERTEX_BIT);
        descripotr_set_layout_bindings.addBinding(1, VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, VK_SHADER_STAGE_FRAGMENT_BIT);
        descripotr_set_layout_bindings.addBinding(2, VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, VK_SHADER_STAGE_FRAGMENT_BIT);
        descripotr_set_layout_bindings.addBinding(3, VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, VK_SHADER_STAGE_FRAGMENT_BIT);
        descripotr_set_layout_bindings.addBinding(4, VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, VK_SHADER_STAGE_FRAGMENT_BIT);
        descripotr_set_layout_bindings.addBinding(5, VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, VK_SHADER_STAGE_FRAGMENT_BIT);

        PtrDescriptorSetLayout ptr_descriptor_set_layout = DescriptorSetLayout::make(move(descripotr_set_layout_bindings));

        _ptr_descriptor_set = DescriptorSet::make(ptr_descriptor_pool, ptr_descriptor_set_layout);

        build_vert_shader.setDevice(ptr_device);
        build_vert_shader.setShaderCode(reinterpret_cast<const uint32_t*>(gbuffer_vert_spirv), sizeof(gbuffer_vert_spirv));
        build_vert_shader.setShaderType(VK_SHADER_STAGE_VERTEX_BIT);
        
        build_frag_shader.setDevice(ptr_device);
        build_frag_shader.setShaderCode(reinterpret_cast<const uint32_t*>(gbuffer_frag_spirv), sizeof(gbuffer_frag_spirv));
        build_frag_shader.setShaderType(VK_SHADER_STAGE_FRAGMENT_BIT);

        build_uniform_matrices_data_buffer.setDevice(ptr_device);
        build_uniform_matrices_data_buffer.setMemoryTypeIndex(gpu_memory_index);
        build_uniform_matrices_data_buffer.setUsage(VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT);
        build_uniform_matrices_data_buffer.setSize(sizeof(UniformBufferMatrices));
        build_uniform_matrices_data_buffer.addQueueFamily(gpu_queue_family_index);

        _ptr_uniform_matrices_data_buffer = build_uniform_matrices_data_buffer.buildPtr();

        build_graphics_pipline.getVertexInputState().addVertexInputBindingDescription(
            0,
            sizeof(Mesh::VertexAttrib),
            VK_VERTEX_INPUT_RATE_VERTEX
        );

        build_graphics_pipline.getVertexInputState().addVertexInputAttributeDescription(
            0,
            0,
            VK_FORMAT_R32G32B32_SFLOAT,
            offsetof(Mesh::VertexAttrib, position)
        );

        build_graphics_pipline.getVertexInputState().addVertexInputAttributeDescription(
            1,
            0,
            VK_FORMAT_R32G32B32_SFLOAT, offsetof(Mesh::VertexAttrib, normal)
        );

         build_graphics_pipline.getVertexInputState().addVertexInputAttributeDescription(
            2,
            0,
            VK_FORMAT_R32G32B32_SFLOAT, offsetof(Mesh::VertexAttrib, tangent)
        );

         build_graphics_pipline.getVertexInputState().addVertexInputAttributeDescription(
            3,
            0,
            VK_FORMAT_R32G32B32_SFLOAT, offsetof(Mesh::VertexAttrib, uv)
        );

        build_graphics_pipline.getColorBlendState().addAttchament(
            VK_FALSE,
            VK_BLEND_FACTOR_ZERO,
            VK_BLEND_FACTOR_ZERO,
            VK_BLEND_OP_ADD,
            VK_BLEND_FACTOR_ZERO,
            VK_BLEND_FACTOR_ZERO,
            VK_BLEND_OP_ADD,
            VK_COLOR_COMPONENT_A_BIT | VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_G_BIT | VK_COLOR_COMPONENT_R_BIT
        );

        build_graphics_pipline.getColorBlendState().addAttchament(
            VK_FALSE,
            VK_BLEND_FACTOR_ZERO,
            VK_BLEND_FACTOR_ZERO,
            VK_BLEND_OP_ADD,
            VK_BLEND_FACTOR_ZERO,
            VK_BLEND_FACTOR_ZERO,
            VK_BLEND_OP_ADD,
            VK_COLOR_COMPONENT_A_BIT | VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_G_BIT | VK_COLOR_COMPONENT_R_BIT
        );

        build_graphics_pipline.getColorBlendState().addAttchament(
            VK_FALSE,
            VK_BLEND_FACTOR_ZERO,
            VK_BLEND_FACTOR_ZERO,
            VK_BLEND_OP_ADD,
            VK_BLEND_FACTOR_ZERO,
            VK_BLEND_FACTOR_ZERO,
            VK_BLEND_OP_ADD,
            VK_COLOR_COMPONENT_A_BIT | VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_G_BIT | VK_COLOR_COMPONENT_R_BIT
        );
        
        build_graphics_pipline.getColorBlendState().setLogicOp(VK_LOGIC_OP_COPY);

        build_graphics_pipline.getDepthStencilState().depthBoundsTestEnable(VK_FALSE);
        build_graphics_pipline.getDepthStencilState().depthTestEnable(VK_TRUE);
        build_graphics_pipline.getDepthStencilState().depthWriteEnable(VK_TRUE);
        build_graphics_pipline.getDepthStencilState().stencilTestEnable(VK_FALSE);
        build_graphics_pipline.getDepthStencilState().setDepthCompareOp(VK_COMPARE_OP_LESS_OR_EQUAL);
        
        build_graphics_pipline.getInputAssemblyState().setTopology(VkPrimitiveTopology::VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST);

        build_graphics_pipline.getMultisampleState().alphaToCoverageEnable(VK_FALSE);
        build_graphics_pipline.getMultisampleState().alphaToOneEnable(VK_FALSE);
        build_graphics_pipline.getMultisampleState().sampleShadingEnable(VK_FALSE);
        build_graphics_pipline.getMultisampleState().setMinSampleShading(1.0f);
        build_graphics_pipline.getMultisampleState().setRasterizationSamples(VkSampleCountFlagBits::VK_SAMPLE_COUNT_1_BIT);

        build_graphics_pipline.getRasterizationState().depthBiasEnable(VK_FALSE);
        build_graphics_pipline.getRasterizationState().depthClampEnable(VK_FALSE);
        build_graphics_pipline.getRasterizationState().setLineWidth(1.0f);
        build_graphics_pipline.getRasterizationState().setPolygonMode(VkPolygonMode::VK_POLYGON_MODE_FILL);
        build_graphics_pipline.getRasterizationState().setCullMode(VK_CULL_MODE_NONE);
        build_graphics_pipline.getRasterizationState().setDepthBiasClamp(0.0f);
        build_graphics_pipline.getRasterizationState().setDepthBiasConstantFactor(0.0f);
        build_graphics_pipline.getRasterizationState().setDepthBiasSlopeFactor(0.0f);

        build_graphics_pipline.getViewportState().addViewport(
            0.0f, 0.0f,
            window_width, window_height,
            0.0f, 1.0f
        );

        build_graphics_pipline.getViewportState().addScissor(0, 0, window_width, window_height);
        
        build_graphics_pipline.addShader(build_vert_shader.build());
        build_graphics_pipline.addShader(build_frag_shader.build());
        build_graphics_pipline.setRenderPass(ptr_render_pass);
        build_graphics_pipline.setPipleineLayout(PipelineLayout::make(ptr_device, ptr_descriptor_set_layout));
        build_graphics_pipline.setSubpassIndex(subpass_index);

        build_sampler.setDevice(ptr_device);
        build_sampler.anisotropyEnable(VK_FALSE);
        build_sampler.compareEnable(VK_FALSE);
        build_sampler.setAdressMode();
        build_sampler.setBorderColor(VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK);
        build_sampler.setLodRange(0.0f, 0.0f);
        build_sampler.setMagFilter(VK_FILTER_LINEAR);
        build_sampler.setMinFilter(VK_FILTER_LINEAR);
        build_sampler.setMipLodBias(0.0f);
        build_sampler.setMipmapMode(VK_SAMPLER_MIPMAP_MODE_LINEAR);
        build_sampler.unnormalizedCoordinates(VK_FALSE);
        
        _ptr_sampler = build_sampler.buildPtr();

        _ptr_pipeline =  build_graphics_pipline.buildPtr();
        _ptr_descriptor_set->writeBuffer(*_ptr_uniform_matrices_data_buffer, 0, sizeof(UniformBufferMatrices), 0, VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER);
    }

    void GBufferPass::draw(
        const Transform&            projection,
        const Transform&            view,
        const Scene::VisibleList&   drawable_objects, 
        const PtrCommandBuffer&     ptr_command_buffer
    )
    {
        UniformBufferMatrices uniform_buffer;

        for (size_t i{0}, size{drawable_objects.size()}; i < size; i++) {
            if (drawable_objects[i]->hasComponent<Mesh>()) {
                Mesh& mesh = drawable_objects[i]->getComponent<Mesh>();

                if(mesh.getMaterial()) {
                    const PtrMaterial&  ptr_material        = mesh.getMaterial();
                    Transform           current_transform   = drawable_objects[i]->getWorldTransform() * drawable_objects[i]->getLocalTransform();
                    
                    uniform_buffer.model_matrix = current_transform.getMatrix();
                    uniform_buffer.MVP          = (projection * view * current_transform).getMatrix();

                    _ptr_uniform_matrices_data_buffer->setData(&uniform_buffer, 1);
                    
                    PtrBuffer& ptr_vertex_buffer    = mesh.getVertexBuffer();
                    PtrBuffer& ptr_index_buffer     = mesh.getIndexBuffer();

                    _ptr_descriptor_set->writeImageView(
                        *ptr_material->getTexture<Material::Textures::Albedo>(), 
                        VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL, 
                        *_ptr_sampler, 
                        1, 
                        VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER
                    );

                    _ptr_descriptor_set->writeImageView(
                        *ptr_material->getTexture<Material::Textures::NormalMap>(), 
                        VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL, 
                        *_ptr_sampler, 
                        2, 
                        VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER
                    );

                    _ptr_descriptor_set->writeImageView(
                        *mesh.getMaterial()->getTexture<Material::Textures::Metallic>(), 
                        VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL, 
                        *_ptr_sampler, 
                        3, 
                        VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER
                    );

                    _ptr_descriptor_set->writeImageView(
                        *ptr_material->getTexture<Material::Textures::Roughness>(), 
                        VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL, 
                        *_ptr_sampler, 
                        4, 
                        VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER
                    );

                    _ptr_descriptor_set->writeImageView(
                        *ptr_material->getTexture<Material::Textures::BakedAO>(), 
                        VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL, 
                        *_ptr_sampler, 
                        5,
                        VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER
                    );
                    
                    ptr_command_buffer->bindVertexBuffer(*ptr_vertex_buffer, mesh.getVertexBufferOffset());
                    ptr_command_buffer->bindIndexBuffer(*ptr_index_buffer, mesh.getIndexBufferOffset(), VK_INDEX_TYPE_UINT32);
                    ptr_command_buffer->bindDescriptorSet(_ptr_pipeline, *_ptr_descriptor_set);
                    ptr_command_buffer->drawIndexed(mesh.getNumIndices(), 1, 0, 0, 0);
                }
            }
        }
    }

    PtrGraphicsPipeline& GBufferPass::getPipeline() noexcept
    {
        return _ptr_pipeline;
    }

    const PtrGraphicsPipeline& GBufferPass::getPipeline() const noexcept
    {
        return _ptr_pipeline;
    }

    PtrDescriptorSet& GBufferPass::getDescriptorSet() noexcept
    {
        return _ptr_descriptor_set;
    }

    const PtrDescriptorSet& GBufferPass::getDescriptorSet() const noexcept
    {
        return _ptr_descriptor_set;
    }

    PtrGBufferPass GBufferPass::make(
        const PtrDevice&            ptr_device, 
        const PtrDescriptorPool&    ptr_descriptor_pool,  
        const PtrRenderPass&        ptr_render_pass,
        uint32_t                    subpass_index,
        uint32_t                    window_width,
        uint32_t                    window_height,
        uint32_t                    gpu_memory_index,
        uint32_t                    gpu_queue_family_index
    )
    {
        return make_unique<GBufferPass>(
            ptr_device, 
            ptr_descriptor_pool, 
            ptr_render_pass, 
            subpass_index, 
            window_width, 
            window_height, 
            gpu_memory_index, 
            gpu_queue_family_index
        );
    }
}
